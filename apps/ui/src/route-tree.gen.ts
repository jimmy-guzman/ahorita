/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as GroupsRouteImport } from './routes/groups/route'
import { Route as IndexImport } from './routes/index'
import { Route as GroupsGroupIdRouteImport } from './routes/groups/$groupId/route'
import { Route as GroupsGroupIdTasksRouteImport } from './routes/groups/$groupId/tasks/route'
import { Route as GroupsGroupIdTasksIndexImport } from './routes/groups/$groupId/tasks/index'
import { Route as GroupsGroupIdTasksNewRouteImport } from './routes/groups/$groupId/tasks/new/route'

// Create Virtual Routes

const GroupsNewRouteLazyImport = createFileRoute('/groups/new')()

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const GroupsRouteRoute = GroupsRouteImport.update({
  path: '/groups',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GroupsNewRouteLazyRoute = GroupsNewRouteLazyImport.update({
  path: '/new',
  getParentRoute: () => GroupsRouteRoute,
} as any).lazy(() =>
  import('./routes/groups/new/route.lazy').then((d) => d.Route),
)

const GroupsGroupIdRouteRoute = GroupsGroupIdRouteImport.update({
  path: '/$groupId',
  getParentRoute: () => GroupsRouteRoute,
} as any)

const GroupsGroupIdTasksRouteRoute = GroupsGroupIdTasksRouteImport.update({
  path: '/tasks',
  getParentRoute: () => GroupsGroupIdRouteRoute,
} as any)

const GroupsGroupIdTasksIndexRoute = GroupsGroupIdTasksIndexImport.update({
  path: '/',
  getParentRoute: () => GroupsGroupIdTasksRouteRoute,
} as any)

const GroupsGroupIdTasksNewRouteRoute = GroupsGroupIdTasksNewRouteImport.update(
  {
    path: '/new',
    getParentRoute: () => GroupsGroupIdTasksRouteRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/groups': {
      preLoaderRoute: typeof GroupsRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/groups/$groupId': {
      preLoaderRoute: typeof GroupsGroupIdRouteImport
      parentRoute: typeof GroupsRouteImport
    }
    '/groups/new': {
      preLoaderRoute: typeof GroupsNewRouteLazyImport
      parentRoute: typeof GroupsRouteImport
    }
    '/groups/$groupId/tasks': {
      preLoaderRoute: typeof GroupsGroupIdTasksRouteImport
      parentRoute: typeof GroupsGroupIdRouteImport
    }
    '/groups/$groupId/tasks/new': {
      preLoaderRoute: typeof GroupsGroupIdTasksNewRouteImport
      parentRoute: typeof GroupsGroupIdTasksRouteImport
    }
    '/groups/$groupId/tasks/': {
      preLoaderRoute: typeof GroupsGroupIdTasksIndexImport
      parentRoute: typeof GroupsGroupIdTasksRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  GroupsRouteRoute.addChildren([
    GroupsGroupIdRouteRoute.addChildren([
      GroupsGroupIdTasksRouteRoute.addChildren([
        GroupsGroupIdTasksNewRouteRoute,
        GroupsGroupIdTasksIndexRoute,
      ]),
    ]),
    GroupsNewRouteLazyRoute,
  ]),
  LoginRoute,
  SignupRoute,
])

/* prettier-ignore-end */
