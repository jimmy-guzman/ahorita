/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as ProjectsRouteImport } from './routes/projects/route'
import { Route as IndexImport } from './routes/index'
import { Route as ProjectsProjectIdRouteImport } from './routes/projects/$projectId/route'
import { Route as ProjectsProjectIdTasksRouteImport } from './routes/projects/$projectId/tasks/route'
import { Route as ProjectsProjectIdTasksIndexImport } from './routes/projects/$projectId/tasks/index'
import { Route as ProjectsProjectIdTasksNewRouteImport } from './routes/projects/$projectId/tasks/new/route'

// Create Virtual Routes

const ProjectsNewRouteLazyImport = createFileRoute('/projects/new')()

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsRouteRoute = ProjectsRouteImport.update({
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/projects/route.lazy').then((d) => d.Route),
)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsNewRouteLazyRoute = ProjectsNewRouteLazyImport.update({
  path: '/new',
  getParentRoute: () => ProjectsRouteRoute,
} as any).lazy(() =>
  import('./routes/projects/new/route.lazy').then((d) => d.Route),
)

const ProjectsProjectIdRouteRoute = ProjectsProjectIdRouteImport.update({
  path: '/$projectId',
  getParentRoute: () => ProjectsRouteRoute,
} as any).lazy(() =>
  import('./routes/projects/$projectId/route.lazy').then((d) => d.Route),
)

const ProjectsProjectIdTasksRouteRoute =
  ProjectsProjectIdTasksRouteImport.update({
    path: '/tasks',
    getParentRoute: () => ProjectsProjectIdRouteRoute,
  } as any)

const ProjectsProjectIdTasksIndexRoute =
  ProjectsProjectIdTasksIndexImport.update({
    path: '/',
    getParentRoute: () => ProjectsProjectIdTasksRouteRoute,
  } as any)

const ProjectsProjectIdTasksNewRouteRoute =
  ProjectsProjectIdTasksNewRouteImport.update({
    path: '/new',
    getParentRoute: () => ProjectsProjectIdTasksRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/projects': {
      preLoaderRoute: typeof ProjectsRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/projects/$projectId': {
      preLoaderRoute: typeof ProjectsProjectIdRouteImport
      parentRoute: typeof ProjectsRouteImport
    }
    '/projects/new': {
      preLoaderRoute: typeof ProjectsNewRouteLazyImport
      parentRoute: typeof ProjectsRouteImport
    }
    '/projects/$projectId/tasks': {
      preLoaderRoute: typeof ProjectsProjectIdTasksRouteImport
      parentRoute: typeof ProjectsProjectIdRouteImport
    }
    '/projects/$projectId/tasks/new': {
      preLoaderRoute: typeof ProjectsProjectIdTasksNewRouteImport
      parentRoute: typeof ProjectsProjectIdTasksRouteImport
    }
    '/projects/$projectId/tasks/': {
      preLoaderRoute: typeof ProjectsProjectIdTasksIndexImport
      parentRoute: typeof ProjectsProjectIdTasksRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  ProjectsRouteRoute.addChildren([
    ProjectsProjectIdRouteRoute.addChildren([
      ProjectsProjectIdTasksRouteRoute.addChildren([
        ProjectsProjectIdTasksNewRouteRoute,
        ProjectsProjectIdTasksIndexRoute,
      ]),
    ]),
    ProjectsNewRouteLazyRoute,
  ]),
  LoginRoute,
  SignupRoute,
])

/* prettier-ignore-end */
